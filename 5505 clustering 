{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1-8CZ_MGMEnWpgAws0HOmszSQ6eHhv8BM",
      "authorship_tag": "ABX9TyPNInf/BuNawG4ZODbPNs7J",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/meghanagpudi/INFO-5502-Meghana/blob/main/5505%20clustering%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "-SmcHju93LBw"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.decomposition import PCA\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_train=pd.read_csv('/content/drive/MyDrive/5505 data sets/ALS_TrainingData_2223.csv')\n",
        "df_test=pd.read_csv('/content/drive/MyDrive/5505 data sets/ALS_TestingData_78 (1).csv')"
      ],
      "metadata": {
        "id": "a7w0iQ0457B5"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "del df_train[\"ID\"]\n",
        "del df_train[\"SubjectID\"]\n",
        "\n",
        "df_train.head()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "IxbdMmq27xbm",
        "outputId": "548b777d-04a6-48b4-dbf4-898495aeb6bc"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Age_mean  Albumin_max  Albumin_median  Albumin_min  Albumin_range  \\\n",
              "0        65         57.0            40.5         38.0       0.066202   \n",
              "1        48         45.0            41.0         39.0       0.010453   \n",
              "2        38         50.0            47.0         45.0       0.008929   \n",
              "3        63         47.0            44.0         41.0       0.012111   \n",
              "4        63         47.0            45.5         42.0       0.008292   \n",
              "\n",
              "   ALSFRS_slope  ALSFRS_Total_max  ALSFRS_Total_median  ALSFRS_Total_min  \\\n",
              "0     -0.965608                30                 28.0                22   \n",
              "1     -0.921717                37                 33.0                21   \n",
              "2     -0.914787                24                 14.0                10   \n",
              "3     -0.598361                30                 29.0                24   \n",
              "4     -0.444039                32                 27.5                20   \n",
              "\n",
              "   ALSFRS_Total_range  ...  Sodium_median  Sodium_min  Sodium_range  \\\n",
              "0            0.021164  ...          145.5       143.0      0.017422   \n",
              "1            0.028725  ...          138.0       136.0      0.010453   \n",
              "2            0.025000  ...          143.0       140.0      0.008929   \n",
              "3            0.014963  ...          139.0       138.0      0.012469   \n",
              "4            0.020374  ...          140.0       138.0      0.008292   \n",
              "\n",
              "   trunk_max  trunk_median  trunk_min  trunk_range  Urine.Ph_max  \\\n",
              "0          8           7.0          7     0.002646           6.0   \n",
              "1          8           7.0          5     0.005386           7.0   \n",
              "2          5           0.0          0     0.008929           6.0   \n",
              "3          5           5.0          3     0.004988           7.0   \n",
              "4          6           4.0          1     0.008489           6.0   \n",
              "\n",
              "   Urine.Ph_median  Urine.Ph_min  \n",
              "0              6.0           6.0  \n",
              "1              5.0           5.0  \n",
              "2              5.0           5.0  \n",
              "3              6.0           5.0  \n",
              "4              5.0           5.0  \n",
              "\n",
              "[5 rows x 99 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d3ba71e6-4503-4d62-8f56-23b517f970a1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age_mean</th>\n",
              "      <th>Albumin_max</th>\n",
              "      <th>Albumin_median</th>\n",
              "      <th>Albumin_min</th>\n",
              "      <th>Albumin_range</th>\n",
              "      <th>ALSFRS_slope</th>\n",
              "      <th>ALSFRS_Total_max</th>\n",
              "      <th>ALSFRS_Total_median</th>\n",
              "      <th>ALSFRS_Total_min</th>\n",
              "      <th>ALSFRS_Total_range</th>\n",
              "      <th>...</th>\n",
              "      <th>Sodium_median</th>\n",
              "      <th>Sodium_min</th>\n",
              "      <th>Sodium_range</th>\n",
              "      <th>trunk_max</th>\n",
              "      <th>trunk_median</th>\n",
              "      <th>trunk_min</th>\n",
              "      <th>trunk_range</th>\n",
              "      <th>Urine.Ph_max</th>\n",
              "      <th>Urine.Ph_median</th>\n",
              "      <th>Urine.Ph_min</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>65</td>\n",
              "      <td>57.0</td>\n",
              "      <td>40.5</td>\n",
              "      <td>38.0</td>\n",
              "      <td>0.066202</td>\n",
              "      <td>-0.965608</td>\n",
              "      <td>30</td>\n",
              "      <td>28.0</td>\n",
              "      <td>22</td>\n",
              "      <td>0.021164</td>\n",
              "      <td>...</td>\n",
              "      <td>145.5</td>\n",
              "      <td>143.0</td>\n",
              "      <td>0.017422</td>\n",
              "      <td>8</td>\n",
              "      <td>7.0</td>\n",
              "      <td>7</td>\n",
              "      <td>0.002646</td>\n",
              "      <td>6.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>48</td>\n",
              "      <td>45.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>39.0</td>\n",
              "      <td>0.010453</td>\n",
              "      <td>-0.921717</td>\n",
              "      <td>37</td>\n",
              "      <td>33.0</td>\n",
              "      <td>21</td>\n",
              "      <td>0.028725</td>\n",
              "      <td>...</td>\n",
              "      <td>138.0</td>\n",
              "      <td>136.0</td>\n",
              "      <td>0.010453</td>\n",
              "      <td>8</td>\n",
              "      <td>7.0</td>\n",
              "      <td>5</td>\n",
              "      <td>0.005386</td>\n",
              "      <td>7.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>38</td>\n",
              "      <td>50.0</td>\n",
              "      <td>47.0</td>\n",
              "      <td>45.0</td>\n",
              "      <td>0.008929</td>\n",
              "      <td>-0.914787</td>\n",
              "      <td>24</td>\n",
              "      <td>14.0</td>\n",
              "      <td>10</td>\n",
              "      <td>0.025000</td>\n",
              "      <td>...</td>\n",
              "      <td>143.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>0.008929</td>\n",
              "      <td>5</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.008929</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>63</td>\n",
              "      <td>47.0</td>\n",
              "      <td>44.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>0.012111</td>\n",
              "      <td>-0.598361</td>\n",
              "      <td>30</td>\n",
              "      <td>29.0</td>\n",
              "      <td>24</td>\n",
              "      <td>0.014963</td>\n",
              "      <td>...</td>\n",
              "      <td>139.0</td>\n",
              "      <td>138.0</td>\n",
              "      <td>0.012469</td>\n",
              "      <td>5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>3</td>\n",
              "      <td>0.004988</td>\n",
              "      <td>7.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>63</td>\n",
              "      <td>47.0</td>\n",
              "      <td>45.5</td>\n",
              "      <td>42.0</td>\n",
              "      <td>0.008292</td>\n",
              "      <td>-0.444039</td>\n",
              "      <td>32</td>\n",
              "      <td>27.5</td>\n",
              "      <td>20</td>\n",
              "      <td>0.020374</td>\n",
              "      <td>...</td>\n",
              "      <td>140.0</td>\n",
              "      <td>138.0</td>\n",
              "      <td>0.008292</td>\n",
              "      <td>6</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.008489</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 99 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3ba71e6-4503-4d62-8f56-23b517f970a1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-d3ba71e6-4503-4d62-8f56-23b517f970a1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-d3ba71e6-4503-4d62-8f56-23b517f970a1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pca = PCA(2)\n",
        " \n",
        "#Transform the data\n",
        "df = pca.fit_transform(df_train)\n",
        " \n",
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k1VJTsFJGKvU",
        "outputId": "e1108a1d-b7f5-4e9b-d55f-993a97ab957f"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2223, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kmeans = KMeans(n_clusters=4, init='k-means++', max_iter=300, n_init=10, random_state=0)\n",
        "pred_y = kmeans.fit_predict(df)\n",
        "plt.scatter(df[:,0], df[:,1])\n",
        "plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='red')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "I2usms-YCzx4",
        "outputId": "8c417175-a5f5-4300-9f6a-ddaf85f5bcdf"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Getting unique labels\n",
        " \n",
        "u_labels = np.unique(pred_y)\n",
        " \n",
        "#plotting the results:\n",
        " \n",
        "for i in u_labels:\n",
        "    plt.scatter(df[pred_y == i , 0] , df[pred_y == i , 1] , label = i)\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "bcvVpxDfHzfj",
        "outputId": "d47fa7fd-2158-4ec9-a68d-1d28ec4867be"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kmeans.labels_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NwVy8DwDIfFO",
        "outputId": "00fbd645-621a-4e12-fd4c-9f39f7ea1f6e"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 0, ..., 2, 3, 1], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pca = PCA(2)\n",
        " \n",
        "#Transform the data\n",
        "test = pca.fit_transform(df_test)\n",
        " \n",
        "test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oJJO-ZgpJRfa",
        "outputId": "d1345fa8-477c-4f6f-f7a2-31edb2b90c86"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(78, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "kmeans.predict(test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j6JP4cf2Jjx9",
        "outputId": "a3a4e31d-cc7a-47d8-8f74-2f9e7f51cf11"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n",
              "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "FSnfKu67Kb_1",
        "outputId": "05de0818-3e8f-4398-9c96-5c2bac7acadb"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f9152a0be90>"
            ]
          },
          "metadata": {},
          "execution_count": 55
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f_l_0 = df[pred_y == 0]"
      ],
      "metadata": {
        "id": "V7YxzdvBEpCP"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(f_l_0[:, 0], f_l_0[:,1], c='red')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "_FMg41-UEKLI",
        "outputId": "7da1ebb0-0a55-499f-ac11-6a2d578a8554"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f9152dbf9d0>"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}